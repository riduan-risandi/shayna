{"remainingRequest":"D:\\Development\\sandi-store\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Development\\sandi-store\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Development\\sandi-store\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Development\\sandi-store\\shayna new\\src\\components\\HeaderShayna.vue?vue&type=template&id=139d2e5d&scoped=true&","dependencies":[{"path":"D:\\Development\\sandi-store\\shayna new\\src\\components\\HeaderShayna.vue","mtime":1672106079520},{"path":"D:\\Development\\sandi-store\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1671161106871},{"path":"D:\\Development\\sandi-store\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1671161063255},{"path":"D:\\Development\\sandi-store\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1671161106871},{"path":"D:\\Development\\sandi-store\\node_modules\\vue-loader\\lib\\index.js","mtime":1671161059937}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}